---
import MainLayout from "@/layouts/MainLayout.astro";
import MaxWidthWrapper from "@/layouts/MaxWidthWrapper.astro";
import { getCollection, getEntry } from "astro:content";
import { Image } from "astro:assets";
import BaseHead from "@/components/BaseHead.astro";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<MainLayout>
  <BaseHead
    slot="head"
    title="Seekhcode - Blog"
    description="Read variety of blogs"
  />
  <MaxWidthWrapper class="my-10">
    <div class="max-w-screen-md space-y-10">
      {
        posts.map(async ({ slug, data: { tags, ...data } }) => {
          const author = await getEntry(data.author);
          return (
            <>
              <div class="flex justify-between relative gap-4">
                <a href={`/blog/${slug}`} class="absolute inset-0" />
                <div class="flex flex-col">
                  <div class="pointer-events-none z-10">
                    <div class="flex items-center gap-2 pointer-events-auto">
                      {author.data.avatar && (
                        <Image
                          src={author.data.avatar}
                          alt="Author Avatar"
                          class="rounded-full w-8 h-8"
                        />
                      )}
                      <a
                        href={author.data.website}
                        class="flex gap-2 text-gray-200 items-center hover:underline"
                      >
                        {author.data.displayName}
                      </a>
                    </div>
                  </div>
                  <h4 class="text-3xl text-white font-semibold mt-2">
                    {data.title}
                  </h4>
                  <p class="line-clamp-3 text-gray-300 mt-4">
                    {data.description}
                  </p>
                  {/* Tags */}
                  <div class="mt-4 flex flex-wrap gap-2">
                    {tags &&
                      tags.map(async (tagRef) => {
                        const tag = await getEntry(tagRef);
                        return (
                          <span
                            class="py-1 px-2 rounded-full text-xs text-white"
                            style={{ backgroundColor: tag.data.color }}
                          >
                            {tag.data.name}
                          </span>
                        );
                      })}
                  </div>
                </div>
                {data.heroImage && (
                  <Image
                    src={data.heroImage}
                    alt=""
                    class="w-32 h-32 object-cover"
                  />
                )}
              </div>
              <hr class="border-border/20 border" />
            </>
          );
        })
      }
    </div></MaxWidthWrapper
  >
</MainLayout>
